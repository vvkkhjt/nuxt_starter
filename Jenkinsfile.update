#!groovy
@Library('jk-pipeline-library') _

def namespace = 'digisky-plat'
def artifactId = 'docs-fed'
def qaDeploymentname = 'docs-fed'
def qaNamespace = 'qa-plat-docs'
def prodDeploymentname = 'docs-fed'
def prodNamespace = 'plat-docs'

jkStage(name: "upgrade Docs app in qaEnv") {
  jkNode(label: "kubectl") {
    withKubeConfig(caCertificate: '', credentialsId: 'ccs-plat-inner-ol', serverUrl: 'https://118.24.103.219/k8s/clusters/c-sxsck') {
      jkabsTask(
        'task.id': 'kubectl_set',
        'image.name': "${namespace}/${artifactId}",
        'k8s.deploymentname': "${qaDeploymentname}",
        'k8s.deployment.namespace': "${qaNamespace}"
      )
    }
  }
}

jkStage(name: "upgrade Docs app in prodEnv?", manual: true) {
  jkNode(label: "kubectl") {
    withKubeConfig(caCertificate: '', credentialsId: 'ccs-plat-inner-ol', serverUrl: 'https://118.24.103.219/k8s/clusters/c-sxsck') {
      jkabsTask(
        'task.id': 'kubectl_set',
        'image.name': "${namespace}/${artifactId}",
        'k8s.deploymentname': "${prodDeploymentname}",
        'k8s.deployment.namespace': "${prodNamespace}"
      )
    }
  }
}
